import React, { useState } from "react";
import { Switch } from "@headlessui/react";
import { Moon, Sun, Bell, Star, Share2, Lock, FileText, Mail, MessageSquare, LogOut } from "lucide-react";

const settingsItems = [
  { icon: <Bell size={18} />, label: "Notification", isToggle: true },
  { icon: <Sun size={18} />, label: "Dark Mode", isToggle: false },
  { icon: <Star size={18} />, label: "Rate App" },
  { icon: <Share2 size={18} />, label: "Share App" },
  { icon: <Lock size={18} />, label: "Privacy Policy" },
  { icon: <FileText size={18} />, label: "Terms and Conditions" },
  { icon: <FileText size={18} />, label: "Cookies Policy" },
  { icon: <Mail size={18} />, label: "Contact" },
  { icon: <MessageSquare size={18} />, label: "Feedback" },
  { icon: <LogOut size={18} />, label: "Logout" }
];

export default function SettingsPage() {
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [notificationsEnabled, setNotificationsEnabled] = useState(false);

  return (
    <div className={`${isDarkMode ? "bg-gray-900 text-white" : "bg-white text-black"} min-h-screen p-6 transition-colors duration-300`}>
      <div className="max-w-md mx-auto rounded-2xl shadow-md overflow-hidden">
        <div className="text-lg font-semibold px-6 py-4 border-b border-gray-200 dark:border-gray-700">Settings</div>
        <ul>
          {settingsItems.map((item, index) => (
            <li
              key={index}
              className="flex items-center justify-between px-6 py-4 border-b border-gray-100 dark:border-gray-800 hover:bg-gray-100 dark:hover:bg-gray-800 transition"
            >
              <div className="flex items-center gap-4">
                {item.icon}
                <span>{item.label}</span>
              </div>
              {item.label === "Notification" && (
                <Switch
                  checked={notificationsEnabled}
                  onChange={setNotificationsEnabled}
                  className={`${
                    notificationsEnabled ? "bg-blue-600" : "bg-gray-300"
                  } relative inline-flex h-6 w-11 items-center rounded-full`}
                >
                  <span className="sr-only">Enable notifications</span>
                  <span
                    className={`${
                      notificationsEnabled ? "translate-x-6" : "translate-x-1"
                    } inline-block h-4 w-4 transform rounded-full bg-white transition`}
                  />
                </Switch>
              )}
              {item.label === "Dark Mode" && (
                <button
                  onClick={() => setIsDarkMode(!isDarkMode)}
                  className="text-sm bg-gray-200 dark:bg-gray-700 px-3 py-1 rounded-full"
                >
                  {isDarkMode ? "Light" : "Dark"}
                </button>
              )}
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}
